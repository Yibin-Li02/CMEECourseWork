Starting code feedback for Yibin, Week1

Current Points = 100

Note that: 
(1) Major sections begin with a double "====" line 
(2) Subsections begin with a single "====" line 
(3) Code output or text file content are printed within single "*****" lines 

======================================================================
======================================================================
Your Git repo size this week is about 1.47 MiB on disk 

PART 1: Checking project workflow...

Found the following directories in parent directory: Feedback, .git, week1

Found the following files in parent directory: README.md

Checking for key files in parent directory...

.gitignore missing, 1 pt deducted

Current Points = 99

Found README in parent directory, named: README.md

Printing contents of README.md:

**********************************************************************
My CMEE Coursework Repository

**********************************************************************

======================================================================
Looking for the weekly directories...

Found 1 weekly directories: week1

The Week1 directory will be assessed 

======================================================================
======================================================================
PART 2: Checking weekly code and workflow...

======================================================================
Assessing WEEK1...

Found the following directories: code, sandbox, data, results

Found the following files: README.md

Checking for readme file in weekly directory...

Found README in parent directory, named: README.md

Printing contents of README.md:

**********************************************************************
# Week 1 Overview

This directory contains scripts, data and results for Week 1.

# Code:

1. tiff2png.sh - Convert tiff to png.
2. CountLines.sh - Count lines in a file.
3. MyExampleScript.sh - My example script.
4. variables.sh - Illustrates the use of variables.
5. boilerplate.sh - simple boilerplate for shell scripts.
6. tabtocsv.sh - Substitute the tabs in the files with commas.
7. ConcatenateTwoFiles.sh - Concatenate the contents of two files.
8. csvtospace.sh - Converts csv file to a space separated values file.

9. UnixPrac1.txt - Codes for FASTA practical.(Not shell Script)

# data

1. .fasta files used for Practical 1.
2. .csv files used for Practical 3.

# resutls

1. Four .csv files are Practical 3 results.

# sandbox

1. Just test files.

**********************************************************************

Found following files in results directory: 1801-output.ssv, README.md, 1803-output.ssv, 1802-output.ssv, 1800-output.ssv...

Ideally, Results directory should be empty other than, perhaps a .gitkeep. 

 0.5 pts deducted per results file 

Current Points = 96.5

Found 9 code files: csvtospace.sh, CountLines.sh, ConcatenateTwoFiles.sh, UnixPrac1.txt, boilerplate.sh, variables.sh, MyExampleScript.sh, tiff2png.sh, tabtocsv.sh

Found the following extra files: README.md
0.5 pt deducted per extra file

Current Points = 96.0

======================================================================
Testing script/code files...

======================================================================
Inspecting script file csvtospace.sh...

File contents are:

**********************************************************************
#!/bin/sh
# Author: Yibin.Li24@imperial.ac.uk
# Script: csvtospace.sh
# Description: Converts all CSV files in a directory to space-separated values files
# Date: Oct 2024

# Set the target directory (replace with your intended path)
target_dir=~/Documents/CMEECourseWork-Yibin.Li/week1/data

# Set the output directory for results
result_dir=~/Documents/CMEECourseWork-Yibin.Li/week1/results

# Check if the target directory exists
if [ ! -d "$target_dir" ]; 
then
    echo "Error: Directory $target_dir does not exist."
    exit 1
fi

# Check if the result directory exists
if [ ! -d "$result_dir" ]; 
then
    echo "Error: Directory $result_dir does not exist."
    exit 1
fi

# Change to the target directory
cd "$target_dir" || { echo "Error: Unable to change to directory $target_dir."; exit 1; }

# Check if there are any .csv files in the directory
if ls *.csv 1> /dev/null 2>&1; 
then
    echo "CSV files found. Processing..."
else
    echo "No CSV files found in the directory."
    exit 1
fi

# Loop through all .csv files and convert them
for input_file in *.csv; 
do
# Create the output file name by replacing ".csv" with "-output.ssv"
    output_file="$result_dir/${input_file%.csv}-output.ssv"
    
    echo "Converting $input_file to $output_file..."
    tr "," " " < "$input_file" > "$output_file"
    echo "$input_file converted successfully."
done

echo "All CSV files processed successfully."

**********************************************************************

Testing csvtospace.sh...

Output (only first 500 characters): 


**********************************************************************
Error: Directory /home/mhasoba/Documents/CMEECourseWork-Yibin.Li/week1/data does not exist.

**********************************************************************

Code ran without errors

Time consumed = 0.00344s

======================================================================
Inspecting script file CountLines.sh...

File contents are:

**********************************************************************
#!/bin/sh
# Author: Yibin.Li24@imperial.ac.uk
# Script: CountLines.sh
# Description: Count lines in a file
# Date: Oct 2024


# Check if a filename was provided
if [ -z "$1" ];
then
    echo "Error: No filename provided."
    echo "Usage: $0 filename"
    exit 1
fi

# Check if the file exists
if [ ! -f "$1" ]; 
then
    echo "Error: File '$1' not found."
    exit 1
fi

# Count the number of lines in the file
NumLines=$(wc -l < "$1")
if [ "$NumLines" -eq 0 ]; 
then
    echo "The file '$1' is empty."
else
    echo "The file '$1' has $NumLines line(s)."
fi

echo "Done"


**********************************************************************

Testing CountLines.sh...

Output (only first 500 characters): 


**********************************************************************
Error: No filename provided.
Usage: CountLines.sh filename

**********************************************************************

Code ran without errors

Time consumed = 0.00362s

======================================================================
Inspecting script file ConcatenateTwoFiles.sh...

File contents are:

**********************************************************************
#!/bin/sh
# Author: Yibin.Li24@imperial.ac.uk
# Script: ConcatenateTwoFiles.sh
# Description: Concatenate the contents of two files
# Date: Oct 2024

# Check if exactly two arguments are provided
if [ $# -ne 3 ]; 
then
    echo "Error: Provide three files."
    exit 1
fi

# Assign input arguments to variables
input_file1="$1"
input_file2="$2"
output_file="$3"

# Check if both files exist
if [ ! -f "$input_file1" ]; 
then
    echo "Error: File '$input_file1' does not exist."
    exit 1
fi

if [ ! -f "$input_file2" ]; 
then
    echo "Error: File '$input_file2' does not exist."
    exit 1
fi

# Check if the output file already exists
if [ -f "$output_file" ]; 
then
    echo "Error: Output file '$output_file' already exists."
    exit 1
fi

# Concatenate the contents of the two input files into the output file
cat "$input_file1" > "$output_file"
cat "$input_file2" >> "$output_file"
echo "The contents of the merged file ($output_file) are"
cat "$output_file"

echo "Done!"
**********************************************************************

Testing ConcatenateTwoFiles.sh...

Output (only first 500 characters): 


**********************************************************************
Error: Provide three files.

**********************************************************************

Code ran without errors

Time consumed = 0.00448s

======================================================================
Inspecting script file UnixPrac1.txt...

File contents are:

**********************************************************************
# Navigate to the work directory

cd ~/Documents/CMEECourseWork-Yibin.Li/week1/data 

#1 Count how many lines there are in each file

echo "407228326.fasta: "; (cat 407228326.fasta; echo) | wc -l; echo "407228412.fasta: "; (cat 407228412.fasta; echo) | wc -l; echo "E.coli.fasta: "; (cat E.coli.fasta; echo) | wc -l


#2 Print everything starting from the second line for the E. coli genome

tail -n +2 E.coli.fasta


#3 Count the sequence length of this genome

for file in *.fasta; do length=$(tail -n +2 "$file" | tr -d "\n" | wc -c); echo "$file: Sequence Length = $length"; done


#4 Count the matches of a particular sequence, “ATGC” in the genome of E. coli
 
grep -v ">" E.coli.fasta | tr -d '\n' | grep -o "ATGC" | wc -l 


#5 Compute the AT/GC ratio

for file in *.fasta; do a=$(grep -v "^>" "$file" | tr -d "\n" | grep -o "A" | wc -l); t=$(grep -v "^>" "$file" | tr -d "\n" | grep -o "T" | wc -l); g=$(grep -v "^>" "$file" | tr -d "\n" | grep -o "G" | wc -l); c=$(grep -v "^>" "$file" | tr -d "\n" | grep -o "C" | wc -l); total_at=$((a + t)); total_gc=$((g + c)); ratio=$( [ $total_gc -ne 0 ] && echo "scale=4; $total_at / $total_gc" | bc || echo "undefined" ); echo "$file: AT/GC Ratio = $ratio"; done


**********************************************************************

Testing UnixPrac1.txt...

======================================================================
Inspecting script file boilerplate.sh...

File contents are:

**********************************************************************
#!/bin/sh
# Author: Yibin.Li24@imperial.ac.uk
# Script: boilerplate.sh
# Desc: simple boilerplate for shell scripts
# Arguments: none
# Date: Oct 2019

#simple boilerplate for shell scripts

echo -e "\nThis is a shell script! \n"

#exit
**********************************************************************

Testing boilerplate.sh...

Output (only first 500 characters): 


**********************************************************************

This is a shell script! 


**********************************************************************

Code ran without errors

Time consumed = 0.00399s

======================================================================
Inspecting script file variables.sh...

File contents are:

**********************************************************************
#!/bin/sh

## Illustrates the use of variables 

# Special variables

echo "This script was called with $# parameters"
echo "The script's name is $0"
echo "The arguments are $@"
echo "The first argument is $1"
echo "The second argument is $2"

# Assigned Variables; Explicit declaration:

MY_VAR='some string' 
echo 'the current value of the variable is:' $MY_VAR
echo
echo 'Please enter a new string'
read MY_VAR
echo
echo 'the current value of the variable is:' $MY_VAR
echo

## Assigned Variables; Reading (multiple values) from user input:

echo 'Enter two numbers separated by space(s)'
read a b
echo
echo 'you entered' $a 'and' $b '; Their sum is:'

## Assigned Variables; Command substitution

MY_SUM=$(expr $a + $b)
echo $MY_SUM
**********************************************************************

Testing variables.sh...

Output (only first 500 characters): 


**********************************************************************
This script was called with 0 parameters
The script's name is variables.sh
The arguments are 
The first argument is 
The second argument is 
the current value of the variable is: some string

Please enter a new string

the current value of the variable is:

Enter two numbers separated by space(s)

you entered and ; Their sum is:


**********************************************************************

Encountered error (or warning):

***IGNORE IF THIS ERROR IS EXPECTED AS PART OF AN IN-CLASS EXERCISE***

expr: syntax error: missing argument after ‘+’

======================================================================
Inspecting script file MyExampleScript.sh...

File contents are:

**********************************************************************
#!/bin/sh
# Author: Yibin.Li24@imperial.ac.uk
# Script: MyExampleScript.sh
# Description: MyExampleScript
# Date: Oct 2024

# Check if the USER environment variable is set
if [ -z "$USER" ];
then
    echo "Error: USER environment variable not set."
    exit 1
fi

# Print the greeting
MSG1="Hello"
MSG2=$USER
echo "$MSG1 $MSG2"
echo "Hello $USER"

**********************************************************************

Testing MyExampleScript.sh...

Output (only first 500 characters): 


**********************************************************************
Hello mhasoba
Hello mhasoba

**********************************************************************

Code ran without errors

Time consumed = 0.00418s

======================================================================
Inspecting script file tiff2png.sh...

File contents are:

**********************************************************************
#!/bin/sh
# Author: Yibin.Li24@imperial.ac.uk
# Script: tiff2png.sh
# Description: Convert tiff to png
# Date: Oct 2024

# Check if ImageMagick is installed
if ! command -v convert &> /dev/null
then
    echo "Error: ImageMagick is not installed."
    exit 1
fi

# Check if there are any .tif files
if [ -z "$(ls *.tif 2> /dev/null)" ]
then
    echo "Error: No .tif files found in the current directory."
    exit 1
fi

# Convert .tif files to .png
for f in *.tif; 
do  
    echo "Converting $f"; 
    if ! convert "$f" "$(basename "$f" .tif).png" 
    then
        echo "Error: Failed to convert."
        exit 1
    fi
done

echo "Conversion completed successfully."


**********************************************************************

Testing tiff2png.sh...

Output (only first 500 characters): 


**********************************************************************
Error: No .tif files found in the current directory.

**********************************************************************

Code ran without errors

Time consumed = 0.00670s

======================================================================
Inspecting script file tabtocsv.sh...

File contents are:

**********************************************************************
#!/bin/sh
# Author: Yibin.Li24@imperial.ac.uk
# Script: tabtocsv.sh
# Description: substitute the tabs in the files with commas

# Saves the output into a .csv file
# Arguments: 1 -> tab delimited file
# Date: Oct 2024

# Check if exactly one argument is provided
if [ $# -ne 1 ];
then
    echo "Error: Provide only one .txt file."
    exit 1
fi

input_file="$1"

# Check if the file exists and ends with .txt
if [ ! -f "$input_file" ]; 
then 
    echo "Error: File '$input_file' not found."
    exit 1
fi

if [[ "$input_file" != *.txt ]]; 
then 
    echo "Error: '$input_file' must be a .txt file."
    exit 1
fi

# Check if the output file already exists
output_file="${input_file%.*}.csv"
if [ -f "$output_file" ]; 
then
    echo "Error: Output file '$output_file' already exists."
    exit 1
fi

# Convert tabs to commas and save as .csv
echo "Converting $input_file to CSV format..."
tr '\t' ',' < "$input_file" > "$output_file"

echo "Done!"





**********************************************************************

Testing tabtocsv.sh...

Output (only first 500 characters): 


**********************************************************************
Error: Provide only one .txt file.

**********************************************************************

Code ran without errors

Time consumed = 0.00383s

======================================================================
======================================================================
Finished running scripts

Ran into 1 errors

======================================================================
======================================================================

FINISHED WEEKLY ASSESSMENT

Current Points for the Week = 96.0

NOTE THAT THESE ARE POINTS, NOT MARKS FOR THE WEEK!